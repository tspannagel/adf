{
	"name": "pl_apiAntiPattern",
	"properties": {
		"activities": [
			{
				"name": "call_token",
				"type": "WebActivity",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "GET",
					"url": {
						"value": "@concat('https://kv-shared-neu.vault.azure.net/secrets/',pipeline().parameters.secretName,'/?api-version=7.4')",
						"type": "Expression"
					},
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net"
					}
				}
			},
			{
				"name": "unt_end",
				"type": "Until",
				"dependsOn": [
					{
						"activity": "call_token",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@variables('loopCondition')",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "cp_restToRaw",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "set_fileName",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"httpRequestTimeout": "00:01:40",
									"requestInterval": "00.00:00:00.010",
									"requestMethod": "GET",
									"additionalHeaders": {
										"x-functions-key": {
											"value": "@activity('call_token').output.value",
											"type": "Expression"
										}
									}
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "ds_rest",
									"type": "DatasetReference",
									"parameters": {
										"baseUrl": {
											"value": "@pipeline().parameters.baseUrl",
											"type": "Expression"
										},
										"relUrl": {
											"value": "@concat(pipeline().parameters.endpoint,'?pageSize=',pipeline().parameters.pageSize,'&offset=',variables('offset'))",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ds_adls_json_folder",
									"type": "DatasetReference",
									"parameters": {
										"accountName": "dltisp01neu",
										"containerName": "raw",
										"directory": "api-mock/AntiPattern",
										"fileName": {
											"value": "@variables('fileName')",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "set_tempVariable",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "cp_restToRaw",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "increment",
								"value": {
									"value": "@add(variables('offset'),int(pipeline().parameters.pageSize))",
									"type": "Expression"
								}
							}
						},
						{
							"name": "set_offset",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "set_tempVariable",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "offset",
								"value": {
									"value": "@variables('increment')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "lkp_response",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "cp_restToRaw",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "JsonSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "JsonReadSettings"
									}
								},
								"dataset": {
									"referenceName": "ds_adls_json_folder",
									"type": "DatasetReference",
									"parameters": {
										"accountName": "dltisp01neu",
										"containerName": "raw",
										"directory": "api-mock/AntiPattern",
										"fileName": {
											"value": "@variables('fileName')",
											"type": "Expression"
										}
									}
								}
							}
						},
						{
							"name": "set_fileName",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "fileName",
								"value": {
									"value": "@concat(formatDateTime(utcNow(), 'yyyyMMdd_HHmm'),'_antipattern_offset_',variables('offset'),'.json')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "set_loopCondition",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "lkp_response",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "loopCondition",
								"value": {
									"value": "@if(equals(activity('lkp_response').output.firstRow?.hasMore,true), false, true)",
									"type": "Expression"
								}
							}
						}
					],
					"timeout": "0.12:00:00"
				}
			}
		],
		"parameters": {
			"secretName": {
				"type": "string",
				"defaultValue": "fa-api-mock-master"
			},
			"baseUrl": {
				"type": "string",
				"defaultValue": "https://fa-api-mock.northeurope-01.azurewebsites.net/api/"
			},
			"endpoint": {
				"type": "string",
				"defaultValue": "item/list"
			},
			"pageSize": {
				"type": "string",
				"defaultValue": "100"
			}
		},
		"variables": {
			"offset": {
				"type": "Integer",
				"defaultValue": 0
			},
			"increment": {
				"type": "Integer",
				"defaultValue": 0
			},
			"fileName": {
				"type": "String"
			},
			"loopCondition": {
				"type": "Boolean",
				"defaultValue": true
			}
		},
		"annotations": []
	}
}